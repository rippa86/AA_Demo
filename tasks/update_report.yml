- name: strip out hostname
  ansible.builtin.set_fact: 
    file_host: "{{ html_path | regex_replace('^.*\\/([^\\/]+)\\.html$', '\\1') }}"
  
- name: find damage done
  ansible.builtin.shell: >
      grep -oP 'progress-bar progress-bar-danger" style="width: [0-9.]+%">\K[^<]+' {{ html_path }}
  register: filez

- name: find % compliant
  ansible.builtin.shell: >
    grep -oP 'progress-bar progress-bar-success" style="width: [0-9.]+%">\K[^<]+' {{ html_path }}
  register: compliance

- name: return filez as a var
  ansible.builtin.set_fact:
    failed_count: "{{ filez.stdout_lines[0] | regex_search('\\d+') | int }}"
    crit_count: "{{ filez.stdout_lines[1] | regex_search('\\d+') | int }}"
    comp_percent: "{{ {{ compliance.stdout_lines[2] | regex_replace('%', '') | float }}"

- name: Check if failed_count is above 10
  ansible.builtin.debug:
    msg: Failed count is above 10
  when: failed_count | int > 10

- name: Check if high_count is before 4
  ansible.builtin.debug:
    msg: High count is before 4
  when: crit_count | int > 2

- name: non compliant?
  ansible.builtin.debug:
    msg: Non compliant
  when: comp_percent | float < 90